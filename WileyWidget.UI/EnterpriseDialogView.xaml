<Window x:Class="WileyWidget.Views.EnterpriseDialogView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:WileyWidget.Views"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:syncfusionskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="Enterprise Information" Height="400" Width="500"
        WindowStartupLocation="CenterOwner"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        syncfusionskin:SfSkinManager.VisualStyle="FluentDark">
    <Window.Resources>
        <Style x:Key="ValidationErrorBorder" TargetType="Control">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.HasError)}" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ValidationTextBox" TargetType="TextBox" BasedOn="{StaticResource ValidationErrorBorder}">
            <Setter Property="Margin" Value="0,0,0,2" />
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Enterprise Name -->
        <TextBlock Grid.Row="0" Text="Enterprise Name:" Margin="0,0,0,5"/>
        <TextBox Grid.Row="1"
                 Style="{DynamicResource ValidationTextBox}" Margin="0,0,0,15">
            <TextBox.Text>
                <Binding Path="Enterprise.Name" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <local:NotEmptyValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <!-- Enterprise Type -->
        <TextBlock Grid.Row="2" Text="Enterprise Type:" Margin="0,0,0,5"/>
        <ComboBox Grid.Row="3" Text="{Binding Enterprise.Type, UpdateSourceTrigger=PropertyChanged}"
                  IsEditable="True" Margin="0,0,0,15">
            <ComboBoxItem Content="Water"/>
            <ComboBoxItem Content="Sewer"/>
            <ComboBoxItem Content="Trash"/>
            <ComboBoxItem Content="Electric"/>
            <ComboBoxItem Content="Gas"/>
        </ComboBox>

        <!-- Current Rate -->
        <TextBlock Grid.Row="4" Text="Current Rate ($):" Margin="0,0,0,5"/>
        <syncfusion:DoubleTextBox Grid.Row="5" Value="{Binding Enterprise.CurrentRate, UpdateSourceTrigger=PropertyChanged}"
                                  MinValue="0" MaxValue="10000" Margin="0,0,0,15"/>

        <!-- Monthly Expenses -->
        <TextBlock Grid.Row="6" Text="Monthly Expenses ($):" Margin="0,0,0,5"/>
        <syncfusion:DoubleTextBox Grid.Row="7" Value="{Binding Enterprise.MonthlyExpenses, UpdateSourceTrigger=PropertyChanged}"
                                  MinValue="0" MaxValue="1000000" Margin="0,0,0,15"/>

        <!-- Citizen Count -->
        <TextBlock Grid.Row="8" Text="Citizens Served:" Margin="0,0,0,5"/>
        <syncfusion:IntegerTextBox Grid.Row="9" Value="{Binding Enterprise.CitizenCount, UpdateSourceTrigger=PropertyChanged}"
                                   MinValue="1" MaxValue="1000000" Margin="0,0,0,20"/>

        <!-- Buttons -->
        <StackPanel Grid.Row="10" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="OK" Width="80" Height="30" Margin="0,0,10,0"
                    Command="{Binding OkCommand}" IsDefault="True"/>
            <Button Content="Cancel" Width="80" Height="30"
                    Command="{Binding CancelCommand}" IsCancel="True"/>
        </StackPanel>
    </Grid>
</Window>
