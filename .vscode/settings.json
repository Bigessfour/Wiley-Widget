{
  // WileyWidget VS Code Workspace Settings
  // See project-plan.md for True North vision and development roadmap
  // See copilot-instructions.md for AI assistant guidelines
  "cSpell.words": [
    "AZURECONNECTION",
    "biges",
    "BSTR",
    "CONNECTIONSTRING",
    "CONNECTIONSTRINGS",
    "fetchability",
    "FIOS",
    "GETUTCDATE",
    "hyperthreading",
    "LASTEXITCODE",
    "localdb",
    "MSBUILDDEBUGPATH",
    "mssqllocaldb",
    "Mvvm",
    "nameof",
    "NOLOGO",
    "NVARCHAR",
    "OPTOUT",
    "pwsh",
    "Serilog",
    "snupkg",
    "sonarqube",
    "sqllocaldb",
    "userprefs",
    "Uverse",
    "wileyadmin",
    "WILEYWIDGET",
    "winget",
    "Xfinity"
  ],
  // PowerShell 7.5.2 Configuration
  "powershell.powerShellDefaultVersion": "7.5.2",
  "powershell.powerShellExePath": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
  "powershell.enableProfileLoading": true,
<<<<<<< Updated upstream
  "powershell.enableReferencesCodeLens": true,
  "powershell.enableScriptAnalysis": true,
=======
  "powershell.enableReferencesCodeLens": false,
  "powershell.enableScriptAnalysis": false,  // Disabled for performance
>>>>>>> Stashed changes
  "powershell.scriptAnalysis.settingsPath": ".vscode\\PSScriptAnalyzerSettings.psd1",
  "powershell.codeFormatting.preset": "OTBS",
  "powershell.codeFormatting.autoCorrectAliases": false,  // Disabled for performance
  "powershell.codeFormatting.useCorrectCasing": false,  // Disabled for performance
  "powershell.integratedConsole.showOnStartup": false,
  "powershell.integratedConsole.focusConsoleOnExecute": false,
<<<<<<< Updated upstream
=======
  "powershell.enableSignatureHelp": false,  // Disabled for performance
>>>>>>> Stashed changes
  // GitHub Copilot Configuration
  "github.copilot.enable": {
    "*": true,
    "powershell": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "github.copilot.advanced": {
    "debug.overrideEngine": "gpt-4o",
    "debug.overrideModel": "gpt-4o",
    "length": 500,
    "temperature": 0.1
  },
  // File Associations for PowerShell
  "files.associations": {
    "*.ps1": "powershell",
    "*.psm1": "powershell",
    "*.psd1": "powershell"
  },
  // PowerShell-specific settings
  "editor.defaultFormatter": "ms-vscode.powershell",
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell",
    "editor.formatOnSave": true,
    "editor.formatOnType": true
  },
  // MCP (Model Context Protocol) Configuration
  // Current: WebSocket Remote Server for real-time collaboration
  // Temporarily disabled due to placeholder URL causing server initialization errors
  /*
  "mcp": {
    "servers": {
      "github": {
        "url": "wss://your-mcp-server.example.com/github",
        "headers": {
          "Authorization": "Bearer ${env:GITHUB_PERSONAL_ACCESS_TOKEN}"
        },
        "reconnect": true,
        "reconnectInterval": 5000,
        "timeout": 30000
      }
    }
  },
  */

  // Alternative Remote Server Configurations (uncomment to use):
  /*
    // Option 1: HTTP Remote Server
    "mcp": {
        "servers": {
            "github": {
                "url": "https://your-mcp-server.example.com/github",
                "headers": {
                    "Authorization": "Bearer ${env:GITHUB_PERSONAL_ACCESS_TOKEN}",
                    "X-API-Key": "${env:MCP_API_KEY}"
                },
                "timeout": 30000
            }
        }
    },

    // Option 2: WebSocket Remote Server
    "mcp": {
        "servers": {
            "github": {
                "url": "wss://your-mcp-server.example.com/github",
                "headers": {
                    "Authorization": "Bearer ${env:GITHUB_PERSONAL_ACCESS_TOKEN}"
                },
                "reconnect": true,
                "reconnectInterval": 5000
            }
        }
    },

    // Option 3: Load Balanced Remote Servers
    "mcp": {
        "servers": {
            "github": {
                "urls": [
                    "https://mcp-server-1.example.com/github",
                    "https://mcp-server-2.example.com/github"
                ],
                "loadBalancing": "round-robin",
                "headers": {
                    "Authorization": "Bearer ${env:GITHUB_PERSONAL_ACCESS_TOKEN}"
                }
            }
        }
    */

  // Enhanced context for C# development
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
  "omnisharp.enableEditorConfigSupport": true,
  "omnisharp.enableRoslynAnalyzers": true,

  // Azure Development Settings
  "azureFunctions.deploySubpath": ".",
  "azureFunctions.postDeployTask": "npm prune",
  "azureFunctions.preDeployTask": "npm run build",
  "azureFunctions.projectLanguage": "C#",
  "azureFunctions.projectRuntime": "~4",
  "azureFunctions.templateFilter": "Verified",

  // Azure SQL Database Settings
  "sql.databaseConnections": [
    {
      "connectionString": "Server=tcp:${env:AZURE_SQL_SERVER},1433;Database=${env:AZURE_SQL_DATABASE};User ID=${env:AZURE_SQL_USER};Password=${env:AZURE_SQL_PASSWORD};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;",
      "name": "Azure SQL Database",
      "providerName": "MSSQL"
    }
  ],

  // Azure Resource Manager Template Settings
  "azureResourceManagerTools.enableCodeLens": true,
  "azureResourceManagerTools.enableParameterFileCodeLens": true,

  // Azure Storage Settings
  "azureStorage.accountFilter": [],
  "azureStorage.containerFilter": [],
  "azureStorage.resourceGroupFilter": "",

  // Azure App Service Settings
  "appService.defaultWebAppToDeploy": "",
  "appService.deploySubpath": ".",
  "appService.showBuildDuringDeployPrompt": true,

  // PowerShell formatting
  "powershell.codeFormatting.openBraceOnSameLine": true,

<<<<<<< Updated upstream
=======
  // PowerShell Pro Tools Configuration (Official Features)
  "powershellProTools.formDesigner.enabled": true,
  "powershellProTools.variableExplorer.enabled": true,
  "powershellProTools.performanceProfiler.enabled": true,
  "powershellProTools.codeLens.enabled": true,
  "powershellProTools.debugger.enhanced": true,
  "powershellProTools.intelliSense.enhanced": true,
  "powershellProTools.overrideDefaultFormatter": true,
  "powershellProTools.astExplorer.enabled": true,
  "powershellProTools.moduleExplorer.enabled": true,
  "powershellProTools.scriptPackaging.enabled": true,
  "powershellProTools.formGenerator.enabled": true,
  "powershellProTools.oneClickAttach.enabled": true,
  "powershellProTools.codeConversion.enabled": true,
  "powershellProTools.rapidSense.enabled": true,

  // Terminal Shell Integration (VS Code 1.74+)
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",
  "terminal.integrated.shellIntegration.suggestEnabled": true,
  "terminal.integrated.shellIntegration.history": 100,
  "terminal.integrated.shellIntegration.showCommandGuide": true,
  "terminal.integrated.stickyScroll.enabled": true,

>>>>>>> Stashed changes
  // XAML formatting
  "xml.format.splitAttributes": "splitNewLine",

  // Workspace-specific Copilot guidance
<<<<<<< Updated upstream
  "github.copilot.chat.welcomeMessage": "Welcome to WileyWidget! This is a hobby WPF project focused on learning. I'll suggest practical patterns suitable for experimentation rather than production-level complexity."
=======
  "github.copilot.chat.welcomeMessage": "Welcome to WileyWidget! This is a hobby WPF project focused on learning. I'll suggest practical patterns suitable for experimentation rather than production-level complexity.",

  // Auto-approval settings for all requests
  "extensions.autoCheckUpdates": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "mcp.autoApprove": true,
  "mcp.servers.github.autoApprove": true,
  "terminal.integrated.confirmOnExit": "never",
  "terminal.integrated.confirmOnKill": "never",

  // File Watcher Exclusions - Critical for preventing OOM crashes
  // Exclude build artifacts, dependencies, and large directories from file watching
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/bin/**": true,
    "**/obj/**": true,
    "**/build/**": true,
    "**/.venv/**": true,
    "**/packages/**": true,
    "**/TestResults/**": true,
    "**/coverage/**": true,
    "**/logs/**": true,
    "**/*.log": true,
    "**/publish/**": true,
    "**/.vs/**": true,
    "**/.trunk/**": true,
    "**/.pytest_cache/**": true,
    "**/TestsAndLogs/**": true,
    "**/*.tmp": true,
    "**/*.bak": true,
    "**/*.backup*": true,
    "**/*_backup*": true
  },

  // Memory optimization settings
  "editor.largeFileOptimizations": true,
  "files.maxMemoryForLargeFilesMB": 4096,
  "search.maxResults": 10000,
  "search.followSymlinks": false,
  "git.enabled": true,
  "git.autorefresh": false,

  // Python Configuration
  "python.defaultInterpreterPath": "./.venv/Scripts/python.exe",
  "python.terminal.activateEnvironment": true,
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": ["--line-length", "120"],
  "python.analysis.typeCheckingMode": "basic",
  // Exclude common generated and environment folders from analysis to avoid third-party package lint noise
  "files.exclude": {
    "**/.venv/**": true,
    "**/%APPDATA%/**": true,
    "**/node_modules/**": true
  },
  "python.analysis.exclude": [
    "**/.venv/**",
    "**/%APPDATA%/**",
    "**/node_modules/**"
  ],
  "python.analysis.useLibraryCodeForTypes": false,
  "python.analysis.autoSearchPaths": false,
  "python.analysis.logLevel": "Error"
>>>>>>> Stashed changes
}
