{
  // Azure Theme Configuration for Database Development
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.colorCustomizations": {
    "[Default Dark Modern]": {
      // Azure-inspired color scheme for database development
      "editor.background": "#0f0f23",
      "editor.foreground": "#cccccc",
      "editor.lineHighlightBackground": "#1e1e2e",
      "editor.selectionBackground": "#264f78",
      "editor.inactiveSelectionBackground": "#3a3d4100"
    }
  },
  "editor.tokenColorCustomizations": {
    "[Default Dark Modern]": {
      "textMateRules": [
        {
          "scope": "keyword.control.sql",
          "settings": {
            "foreground": "#569cd6"
          }
        },
        {
          "scope": "string.quoted.single.sql",
          "settings": {
            "foreground": "#ce9178"
          }
        },
        {
          "scope": "constant.numeric.sql",
          "settings": {
            "foreground": "#b5cea8"
          }
        },
        {
          "scope": "entity.name.function.sql",
          "settings": {
            "foreground": "#dcdcaa"
          }
        }
      ]
    }
  },
  "workbench.iconTheme": "vs-seti",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.tabCloseButton": "left",
  "workbench.tree.indent": 20,
  "cSpell.words": [
    "AZURECONNECTION",
    "biges",
    "BSTR",
    "CONNECTIONSTRING",
    "CONNECTIONSTRINGS",
    "fetchability",
    "FIOS",
    "GETUTCDATE",
    "hyperthreading",
    "LASTEXITCODE",
    "localdb",
    "MSBUILDDEBUGPATH",
    "mssqllocaldb",
    "Mvvm",
    "nameof",
    "NOLOGO",
    "NVARCHAR",
    "OPTOUT",
    "pwsh",
    "Serilog",
    "snupkg",
    "sonarqube",
    "sqllocaldb",
    "userprefs",
    "Uverse",
    "wileyadmin",
    "WILEYWIDGET",
    "winget",
    "Xfinity"
  ],
  // PowerShell 7.5.3 Configuration
  "powershell.powerShellDefaultVersion": "PowerShell (x64)",
  "powershell.powerShellExePath": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
  "powershell.enableProfileLoading": true,
  "powershell.enableReferencesCodeLens": false,
  "powershell.enableScriptAnalysis": false,  // Disabled for performance
  "powershell.enableSignatureHelp": false,  // Disabled for performance
  "powershell.scriptAnalysis.settingsPath": ".vscode\\PSScriptAnalyzerSettings.psd1",
  "powershell.codeFormatting.preset": "OTBS",
  "powershell.codeFormatting.autoCorrectAliases": false,  // Disabled for performance
  "powershell.codeFormatting.useCorrectCasing": false,  // Disabled for performance
  "powershell.integratedConsole.showOnStartup": false,
  "powershell.integratedConsole.focusConsoleOnExecute": false,
  // GitHub Copilot Configuration
  "github.copilot.enable": {
    "*": true,
    "powershell": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  "github.copilot.advanced": {
    "debug.overrideEngine": "gpt-4o",
    "debug.overrideModel": "gpt-4o",
    "length": 500,
    "temperature": 0.1
  },
  // File Associations for PowerShell
  "files.associations": {
    "*.ps1": "powershell",
    "*.psm1": "powershell",
    "*.psd1": "powershell"
  },
  // PowerShell-specific settings
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell",
    "editor.formatOnSave": true,
    "editor.formatOnType": true
  },
  // MCP (Model Context Protocol) Configuration
  "mcp": {
    "servers": {
      "github": {
        "url": "wss://mcp-github.example.com/github",
        "headers": {
          "Authorization": "Bearer ${env:GITHUB_PERSONAL_ACCESS_TOKEN}"
        },
        "reconnect": true,
        "reconnectInterval": 5000,
        "timeout": 30000
      },
      "microsoft-docs": {
        "url": "https://mcp-microsoft-docs.example.com/docs",
        "headers": {
          "Authorization": "Bearer ${env:MICROSOFT_DOCS_TOKEN}"
        },
        "timeout": 30000
      }
    }
  },

  // Azure MCP Service Principal Authentication
  // IMPORTANT: Do not store secrets in repo. Configure these in your OS/user environment or .env (untracked).
  // Example (PowerShell):
  //   $env:AZURE_CLIENT_ID = "<guid>"
  //   $env:AZURE_CLIENT_SECRET = "<secret>"
  //   $env:AZURE_TENANT_ID = "<guid>"
  // If you need to inject env vars into the integrated terminal, do it locally via user settings, not workspace.
  // "terminal.integrated.env.windows": { }

  // Azure MCP Extension Settings
  "azureMcp.serverMode": "namespace",
  "azureMcp.enabledServices": ["storage", "keyvault"],
  "azureMcp.readOnly": false,

  // Enhanced context for C# development
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
  "omnisharp.enableEditorConfigSupport": true,
  "omnisharp.enableRoslynAnalyzers": true,

  // Azure Development Settings
  "azureFunctions.deploySubpath": ".",
  "azureFunctions.postDeployTask": "npm prune",
  "azureFunctions.preDeployTask": "npm run build",
  "azureFunctions.projectLanguage": "C#",
  "azureFunctions.projectRuntime": "~4",
  "azureFunctions.templateFilter": "Verified",

  // Azure SQL Database Settings
  "sql.databaseConnections": [
    {
      "connectionString": "Server=tcp:${env:AZURE_SQL_SERVER},1433;Database=${env:AZURE_SQL_DATABASE};User ID=${env:AZURE_SQL_USER};Password=${env:AZURE_SQL_PASSWORD};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;",
      "name": "Azure SQL Database",
      "providerName": "MSSQL"
    }
  ],

  // SQL Server Extension Settings (ms-mssql.mssql)
  "mssql.connections": [
    {
      "server": "${env:AZURE_SQL_SERVER},1433",
      "database": "${env:AZURE_SQL_DATABASE}",
      "authenticationType": "SqlLogin",
      "user": "${env:AZURE_SQL_USER}",
      "password": "",
      "savePassword": true,
      "profileName": "Azure SQL Database",
      "encrypt": true,
      "trustServerCertificate": false,
      "connectTimeout": 30
    }
  ],
  "mssql.saveAsCsv.includeHeaders": true,
  "mssql.saveAsCsv.delimiter": ",",
  "mssql.saveAsCsv.lineSeparator": "\n",
  "mssql.saveAsCsv.encoding": "utf-8",
  "mssql.query.displayBitAsNumber": true,
  "mssql.query.maxXmlCharsToStore": 2097152,
  "mssql.query.maxCharsToStore": 65535,
  "mssql.query.rowsToCache": 500,
  "mssql.intelliSense.enableIntelliSense": true,
  "mssql.intelliSense.enableErrorChecking": true,
  "mssql.intelliSense.enableSuggestions": true,
  "mssql.intelliSense.enableQuickInfo": true,
  "mssql.intelliSense.lowerCaseSuggestions": false,

  // Azure Resource Manager Template Settings
  "azureResourceManagerTools.enableCodeLens": true,
  "azureResourceManagerTools.enableParameterFileCodeLens": true,

  // Azure Storage Settings
  "azureStorage.accountFilter": [],
  "azureStorage.containerFilter": [],
  "azureStorage.resourceGroupFilter": "",

  // Azure App Service Settings
  "appService.defaultWebAppToDeploy": "",
  "appService.deploySubpath": ".",
  "appService.showBuildDuringDeployPrompt": true,

  // PowerShell formatting
  "powershell.codeFormatting.openBraceOnSameLine": true,

  // PowerShell Pro Tools Configuration (Official Features)
  "powershellProTools.formDesigner.enabled": true,
  "powershellProTools.variableExplorer.enabled": true,
  "powershellProTools.performanceProfiler.enabled": true,
  "powershellProTools.codeLens.enabled": true,
  "powershellProTools.debugger.enhanced": true,
  "powershellProTools.intelliSense.enhanced": true,
  "powershellProTools.overrideDefaultFormatter": true,
  "powershellProTools.astExplorer.enabled": true,
  "powershellProTools.moduleExplorer.enabled": true,
  "powershellProTools.scriptPackaging.enabled": true,
  "powershellProTools.formGenerator.enabled": true,
  "powershellProTools.oneClickAttach.enabled": true,
  "powershellProTools.codeConversion.enabled": true,
  "powershellProTools.rapidSense.enabled": true,

  // Terminal Shell Integration (VS Code 1.74+)
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",
  "terminal.integrated.shellIntegration.suggestEnabled": true,
  "terminal.integrated.shellIntegration.history": 100,
  "terminal.integrated.shellIntegration.showCommandGuide": true,
  "terminal.integrated.stickyScroll.enabled": true,

  // XAML formatting
  "xml.format.splitAttributes": "splitNewLine",

  // Workspace-specific Copilot guidance
  "github.copilot.chat.welcomeMessage": "Welcome to WileyWidget! This is a hobby WPF project focused on learning. I'll suggest practical patterns suitable for experimentation rather than production-level complexity.",

  // Auto-approval settings for all requests
  "extensions.autoCheckUpdates": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "mcp.autoApprove": true,
  "mcp.servers.github.autoApprove": true,
  "terminal.integrated.confirmOnExit": "never",
  "terminal.integrated.confirmOnKill": "never",

  // File Watcher Exclusions - Critical for preventing OOM crashes
  // Exclude build artifacts, dependencies, and large directories from file watching
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/bin/**": true,
    "**/obj/**": true,
    "**/build/**": true,
    "**/.venv/**": true,
    "**/packages/**": true,
    "**/TestResults/**": true,
    "**/coverage/**": true,
    "**/logs/**": true,
    "**/*.log": true,
    "**/publish/**": true,
    "**/.vs/**": true,
    "**/.trunk/**": true,
    "**/.pytest_cache/**": true,
    "**/TestsAndLogs/**": true,
    "**/*.tmp": true,
    "**/*.bak": true,
    "**/*.backup*": true,
    "**/*_backup*": true
  },

  // Memory optimization settings
  "editor.largeFileOptimizations": true,
  "files.maxMemoryForLargeFilesMB": 4096,
  "search.maxResults": 10000,
  "search.followSymlinks": false,
  "git.enabled": true,
  "git.autorefresh": false,

  // Python Configuration
  // Note: Using system Python since virtual environment setup is incomplete
  // Consider setting up virtual environment with: python -m venv .venv
  // Then update this path to: "${workspaceFolder}/.venv/Scripts/python.exe"
  "python.terminal.activateEnvironment": true,
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": ["--line-length", "120"],
  // Exclude common generated and environment folders from analysis to avoid third-party package lint noise
  "files.exclude": {
    "**/.venv/**": true,
    "**/%APPDATA%/**": true,
    "**/node_modules/**": true
  },
  "python.analysis.logLevel": "Error",

  // Testing Configuration
  "testing.autoRun.mode": "rerun",
  "testing.openTesting": "openOnTestStart",
  "testing.defaultGutterClickAction": "run",
  "testing.gutterEnabled": true,
  "testing.countBadge": "failed",
  "testing.followRunningTest": true,
  "testing.saveBeforeTest": true,

  // Test Coverage Configuration
  "coverage-gutters.showGutterCoverage": true,
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  "coverage-gutters.coverageFileNames": [
    "lcov.info",
    "cov.xml",
    "coverage.xml",
    "jacoco.xml",
    "coverage.json"
  ],
  "coverage-gutters.coverageBaseDir": "${workspaceFolder}",
  "coverage-gutters.coverageFileExtension": ".xml,.json,.info",

  // Python Testing Configuration
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": [
    "--verbose",
    "--tb=short",
    "--maxfail=5",
    "-m",
    "not slow"
  ],
  "python.testing.pytestPath": "pytest",

  // C# Testing Configuration
  "dotnet-test-explorer.testProjectPath": "**/*Test*.csproj",
  "dotnet-test-explorer.enableTelemetry": false,
  "dotnet-test-explorer.showCodeCoverage": true,
  "dotnet-test-explorer.testResultFormat": "detailed",

  // Test Explorer Configuration
  "testExplorer.addToEditorContextMenu": true,
  "testExplorer.codeLens": true,
  "testExplorer.errorDecoration": true,
  "testExplorer.gutterDecoration": true,
  "testExplorer.mergeSuites": false,
  "testExplorer.showCollapseButton": true,
  "testExplorer.showExpandButton": true,
  "testExplorer.showOnRunStart": true,
  "testExplorer.sort": "byLocation",
  "testExplorer.useNativeTesting": true,

  // Pytest Runner Configuration
  "pytestRunner.cwd": "${workspaceFolder}",
  "pytestRunner.args": [
    "--verbose",
    "--tb=short",
    "--maxfail=5"
  ],
  "pytestRunner.env": {
    "PYTHONPATH": "${workspaceFolder}"
  },
  "testing.automaticallyOpenTestResults": "openOnTestStart",
  "workbench.editor.tabActionLocation": "left"
}
