// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WileyWidget.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WileyWidget.Models.AppSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CacheExpirationMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("EnableDataCaching")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableFileLogging")
                        .HasColumnType("bit");

                    b.Property<string>("LogFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QboAccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QboRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("QboTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuickBooksAccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksEnvironment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksRealmId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("QuickBooksTokenExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SelectedLogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseDynamicColumns")
                        .HasColumnType("bit");

                    b.Property<double?>("WindowHeight")
                        .HasColumnType("float");

                    b.Property<double?>("WindowLeft")
                        .HasColumnType("float");

                    b.Property<bool?>("WindowMaximized")
                        .HasColumnType("bit");

                    b.Property<double?>("WindowTop")
                        .HasColumnType("float");

                    b.Property<double?>("WindowWidth")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActivityCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("ActualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetedAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("EncumbranceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("EndPeriod")
                        .HasColumnType("date");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<int?>("FundId")
                        .HasColumnType("int");

                    b.Property<int>("FundType")
                        .HasColumnType("int");

                    b.Property<bool>("IsGASBCompliant")
                        .HasColumnType("bit");

                    b.Property<int?>("MunicipalAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("SourceFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SourceRowNumber")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartPeriod")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Variance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityCode");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FundId");

                    b.HasIndex("MunicipalAccountId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SourceRowNumber");

                    b.HasIndex("AccountNumber", "FiscalYear")
                        .IsUnique();

                    b.ToTable("BudgetEntries", t =>
                        {
                            t.HasCheckConstraint("CK_Budget_Positive", "[BudgetedAmount] > 0");
                        });
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InteractionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCost")
                        .HasColumnType("bit");

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PrimaryEnterpriseId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryEnterpriseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("PrimaryEnterpriseId");

                    b.HasIndex("SecondaryEnterpriseId");

                    b.ToTable("BudgetInteraction");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BudgetPeriod");
                });

            modelBuilder.Entity("WileyWidget.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCode")
                        .IsUnique()
                        .HasFilter("[DepartmentCode] IS NOT NULL");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BudgetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CitizenCount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MeterReadDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MeterReading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MonthlyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("PreviousMeterReadDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PreviousMeterReading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BudgetAmount = 285755.00m,
                            CitizenCount = 12500,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentRate = 45.50m,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MonthlyExpenses = 0m,
                            Name = "Town of Wiley Water Department",
                            RowVersion = new byte[0],
                            Status = 0,
                            TotalBudget = 0m,
                            Type = "Water"
                        },
                        new
                        {
                            Id = 2,
                            BudgetAmount = 5879527.00m,
                            CitizenCount = 12500,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentRate = 125.75m,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MonthlyExpenses = 0m,
                            Name = "Town of Wiley Sewer Department",
                            RowVersion = new byte[0],
                            Status = 0,
                            TotalBudget = 0m,
                            Type = "Sewer"
                        },
                        new
                        {
                            Id = 3,
                            BudgetAmount = 285755.00m,
                            CitizenCount = 12500,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            CurrentRate = 0.12m,
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            MonthlyExpenses = 0m,
                            Name = "Town of Wiley Electric Department",
                            RowVersion = new byte[0],
                            Status = 0,
                            TotalBudget = 0m,
                            Type = "Electric"
                        });
                });

            modelBuilder.Entity("WileyWidget.Models.Entities.Fund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FundCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("WileyWidget.Models.FiscalYearSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FiscalYearStartDay")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearStartMonth")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("FiscalYearSettings");
                });

            modelBuilder.Entity("WileyWidget.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("MunicipalAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalAccountId");

                    b.HasIndex("VendorId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("WileyWidget.Models.MunicipalAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Fund")
                        .HasColumnType("int");

                    b.Property<int>("FundClass")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentAccountId")
                        .HasColumnType("int");

                    b.Property<string>("QuickBooksId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetPeriodId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ParentAccountId");

                    b.ToTable("MunicipalAccounts");
                });

            modelBuilder.Entity("WileyWidget.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetEntryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MunicipalAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetEntryId");

                    b.HasIndex("MunicipalAccountId");

                    b.HasIndex("TransactionDate");

                    b.ToTable("Transactions", t =>
                        {
                            t.HasCheckConstraint("CK_Transaction_NonZero", "[Amount] != 0");
                        });
                });

            modelBuilder.Entity("WileyWidget.Models.UtilityCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccountCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("AccountOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BusinessLicenseNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ConnectDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DisconnectDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("LastPaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MailingAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MailingState")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MailingZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MeterNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ServiceAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ServiceLocation")
                        .HasColumnType("int");

                    b.Property<string>("ServiceState")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ServiceZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("UtilityCustomers");
                });

            modelBuilder.Entity("WileyWidget.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetEntry", b =>
                {
                    b.HasOne("WileyWidget.Models.Department", "Department")
                        .WithMany("BudgetEntries")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Entities.Fund", "Fund")
                        .WithMany("BudgetEntries")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WileyWidget.Models.MunicipalAccount", null)
                        .WithMany("BudgetEntries")
                        .HasForeignKey("MunicipalAccountId");

                    b.HasOne("WileyWidget.Models.BudgetEntry", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("Fund");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.HasOne("WileyWidget.Models.Enterprise", null)
                        .WithMany("BudgetInteractions")
                        .HasForeignKey("EnterpriseId");

                    b.HasOne("WileyWidget.Models.Enterprise", "PrimaryEnterprise")
                        .WithMany()
                        .HasForeignKey("PrimaryEnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Enterprise", "SecondaryEnterprise")
                        .WithMany()
                        .HasForeignKey("SecondaryEnterpriseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("PrimaryEnterprise");

                    b.Navigation("SecondaryEnterprise");
                });

            modelBuilder.Entity("WileyWidget.Models.Department", b =>
                {
                    b.HasOne("WileyWidget.Models.Department", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WileyWidget.Models.Invoice", b =>
                {
                    b.HasOne("WileyWidget.Models.MunicipalAccount", "MunicipalAccount")
                        .WithMany("Invoices")
                        .HasForeignKey("MunicipalAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Vendor", "Vendor")
                        .WithMany("Invoices")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MunicipalAccount");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("WileyWidget.Models.MunicipalAccount", b =>
                {
                    b.HasOne("WileyWidget.Models.BudgetPeriod", "BudgetPeriod")
                        .WithMany("Accounts")
                        .HasForeignKey("BudgetPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.MunicipalAccount", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentAccountId");

                    b.OwnsOne("WileyWidget.Models.AccountNumber", "AccountNumber", b1 =>
                        {
                            b1.Property<int>("MunicipalAccountId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MunicipalAccountId");

                            b1.ToTable("MunicipalAccounts");

                            b1.WithOwner()
                                .HasForeignKey("MunicipalAccountId");
                        });

                    b.Navigation("AccountNumber")
                        .IsRequired();

                    b.Navigation("BudgetPeriod");

                    b.Navigation("Department");

                    b.Navigation("ParentAccount");
                });

            modelBuilder.Entity("WileyWidget.Models.Transaction", b =>
                {
                    b.HasOne("WileyWidget.Models.BudgetEntry", "BudgetEntry")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.MunicipalAccount", null)
                        .WithMany("Transactions")
                        .HasForeignKey("MunicipalAccountId");

                    b.Navigation("BudgetEntry");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetEntry", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetPeriod", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WileyWidget.Models.Department", b =>
                {
                    b.Navigation("BudgetEntries");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Navigation("BudgetInteractions");
                });

            modelBuilder.Entity("WileyWidget.Models.Entities.Fund", b =>
                {
                    b.Navigation("BudgetEntries");
                });

            modelBuilder.Entity("WileyWidget.Models.MunicipalAccount", b =>
                {
                    b.Navigation("BudgetEntries");

                    b.Navigation("ChildAccounts");

                    b.Navigation("Invoices");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WileyWidget.Models.Vendor", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
