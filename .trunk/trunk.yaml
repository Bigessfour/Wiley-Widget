# This file controls the behavior of Trunk: https://docs.trunk.io/cli
# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml
version: 0.1
cli:
  version: 1.25.0
  # Memory optimization: Limit all trunk commands to 1 concurrent job to prevent memory exhaustion
  options:
    # Restrict concurrent job limit to commands that support the flag to avoid
    # passing --jobs to git-hooks callbacks (which caused errors during commits).
    - commands: [check, fmt]
      args: --jobs=1
    # Default to formatting only changed files for performance
    - commands: [fmt]
      args: --sample=10
# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
plugins:
  sources:
    - id: trunk
      ref: v1.7.2
      uri: https://github.com/trunk-io/plugins
# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)
runtimes:
  enabled:
    - go@1.21.0
    - node@22.16.0
    - python@3.11.9
# This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)
lint:
  enabled:
    # .NET code formatting and style
    - pyright@1.1.406
    - dotnet-format@9.0.0
    # Comprehensive Python linting (replaces black, isort, bandit)
    - ruff@0.13.3
    # PowerShell script analysis
    - psscriptanalyzer@1.24.0
    # General code formatting (JSON, YAML, Markdown, etc.)
    - prettier@3.6.2
    # YAML configuration linting
    - yamllint
    # Security scanning for secrets and vulnerabilities
    - gitleaks@8.28.0
    - trufflehog@3.90.8
    # GitHub Actions workflow validation
    - actionlint@1.7.8
    # Infrastructure security (limited scope to avoid memory issues)
    - checkov@3.2.474
  disabled:
    # Memory-intensive security scanners - disabled to prevent OOM
    - bandit  # Security now handled by ruff's S rules
    - semgrep
    - osv-scanner
    # Python tools replaced by ruff
    - black
    - isort
    # Memory-intensive formatters and tools
    - oxipng
    - shellcheck
    - shfmt
    - taplo
    # Too aggressive on documentation formatting
    - markdownlint
    # Too picky about git whitespace in docs
    - git-diff-check
  ignore:
    # Skip documentation formatting entirely
    - linters: [ALL]
      paths:
        - docs/**/*.md
        - '*.md'
        - README.md
        - CHANGELOG.md
        - CONTRIBUTING.md
    # Skip YAML formatting for GitHub workflows
    - linters: [prettier]
      paths:
        - .github/**/*.yml
        - .github/**/*.yaml
    # Skip binary and generated files
    - linters: [ALL]
      paths:
        - bin/
        - obj/
        - TestResults/
        - coverage/
        - '*.binlog'
        - '*.exe'
        - '*.dll'
        - '*.log'
        - logs/
        - .env*
        - config_backup/
        - env_backup/**
    # Skip virtual environments, node modules, and user appdata to avoid third-party package linting
    - linters: [ALL]
      paths:
        - .venv/
        - '%APPDATA%/npm/**'
        - node_modules/
        - __pycache__/
        - .pytest_cache/
        - htmlcov/
        - .coverage
        - '*.pyc'
        - '*.pyo'
        - '*.pyd'
        - assets/
        - data/
        - tools/
    # Limit checkov to only essential infrastructure files to prevent memory issues
    - linters: [checkov]
      paths:
        - '**/*.py'  # Skip Python files for checkov (handled by ruff)
        - '**/*.cs'  # Skip C# files
        - '**/*.ps1' # Skip PowerShell files
        - docs/
        - logs/
        - TestResults/
actions:
  enabled:
    - trunk-announce
    - trunk-check-pre-push
    - trunk-fmt-pre-commit
    - trunk-upgrade-available
tools:
  enabled:
    - pwsh@7.5.3
    - converttosarif@1.0.0
