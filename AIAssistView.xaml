<Window x:Class="WileyWidget.AIAssistView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WileyWidget"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        mc:Ignorable="d"
        Title="AI Assistant" Height="700" Width="900"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <!-- Message styling converters -->
        <local:UserMessageBackgroundConverter x:Key="UserMessageBackgroundConverter" />
        <local:MessageAlignmentConverter x:Key="MessageAlignmentConverter" />
        <local:MessageForegroundConverter x:Key="MessageForegroundConverter" />
    </Window.Resources>

    <DockPanel>
        <!-- Ribbon Toolbar -->
        <syncfusion:Ribbon DockPanel.Dock="Top" x:Name="AIAssistRibbon">
            <syncfusion:RibbonTab Caption="AI Assistant">
                <syncfusion:RibbonBar Header="Conversation Mode">
                    <syncfusion:RibbonButton Label="ðŸ¤– General"
                                           Command="{Binding SetConversationModeCommand}"
                                           CommandParameter="General" />
                    <syncfusion:RibbonButton Label="ðŸ’° Service Charge"
                                           Command="{Binding SetConversationModeCommand}"
                                           CommandParameter="ServiceCharge" />
                    <syncfusion:RibbonButton Label="ðŸ”® What-If"
                                           Command="{Binding SetConversationModeCommand}"
                                           CommandParameter="WhatIf" />
                    <syncfusion:RibbonButton Label="ðŸŽ¯ Proactive"
                                           Command="{Binding SetConversationModeCommand}"
                                           CommandParameter="Proactive" />
                </syncfusion:RibbonBar>
                <syncfusion:RibbonBar Header="Actions">
                    <syncfusion:RibbonButton Label="Clear Chat" Command="{Binding ClearChatCommand}" />
                    <syncfusion:RibbonButton Label="Export Chat" Command="{Binding ExportChatCommand}" />
                </syncfusion:RibbonBar>
                <syncfusion:RibbonBar Header="Settings">
                    <syncfusion:RibbonButton Label="Configure AI" Command="{Binding ConfigureAICommand}" />
                </syncfusion:RibbonBar>
            </syncfusion:RibbonTab>
        </syncfusion:Ribbon>

        <!-- Main AI Assist Content -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Hidden probe control ensures UI automation tests find at least one WPF Control instance -->
            <Button x:Name="UiProbeControl" Visibility="Collapsed" />

            <!-- Chat History Area -->
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" Margin="10">
                <StackPanel Margin="5">
                    <!-- Welcome Message -->
                    <Border Background="#E3F2FD" BorderBrush="#1976D2" BorderThickness="1"
                            CornerRadius="8" Padding="15" Margin="0,0,0,10">
                        <StackPanel>
                            <TextBlock Text="ðŸ¤– Wiley Widget AI Assistant"
                                     FontSize="16" FontWeight="Bold" Foreground="#1976D2" />
                            <TextBlock Text="Hello! I'm your AI assistant for Wiley Widget. I can help you with:"
                                     FontSize="12" Foreground="#424242" Margin="0,5,0,5" />
                            <TextBlock Text="â€¢ ðŸ’¬ General conversation and application guidance"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="â€¢ ðŸ’° Service charge calculations based on actual expenses"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="â€¢ ðŸ”® What-if scenario planning (pay raises, benefits, equipment)"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="â€¢ ðŸŽ¯ Proactive recommendations and insights"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="â€¢ ðŸ“Š Data analysis and enterprise management workflows"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="â€¢ ðŸ”— QuickBooks integration questions"
                                     FontSize="11" Foreground="#666666" Margin="10,2,0,0" />
                            <TextBlock Text="Choose a conversation mode above to get started!"
                                     FontSize="12" Foreground="#1976D2" Margin="0,10,0,0" FontWeight="Bold" />
                        </StackPanel>
                    </Border>

                    <!-- Chat Messages -->
                    <ItemsControl ItemsSource="{Binding ChatMessages}" Margin="0,10,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{Binding IsUser, Converter={StaticResource UserMessageBackgroundConverter}}"
                                        BorderBrush="#DDDDDD" BorderThickness="1" CornerRadius="8"
                                        Padding="12" Margin="0,0,0,8"
                                        HorizontalAlignment="{Binding IsUser, Converter={StaticResource MessageAlignmentConverter}}"
                                        MaxWidth="400">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Content}" TextWrapping="Wrap"
                                                 Foreground="{Binding IsUser, Converter={StaticResource MessageForegroundConverter}}"
                                                 FontSize="12" />
                                        <TextBlock Text="{Binding Timestamp, StringFormat='{}{0:HH:mm}'}"
                                                 FontSize="10" Foreground="#888888"
                                                 HorizontalAlignment="Right" Margin="0,5,0,0" />
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Typing Indicator -->
                    <Border Background="#F5F5F5" BorderBrush="#DDDDDD" BorderThickness="1"
                            CornerRadius="8" Padding="12" Margin="0,0,0,8"
                            HorizontalAlignment="Left" MaxWidth="400"
                            Visibility="{Binding IsTyping, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="ðŸ¤– AI is thinking..." Foreground="#666666" FontSize="12" FontStyle="Italic" />
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Financial Input Forms -->
            <Border Grid.Row="1" Background="#F8F9FA" BorderBrush="#E9ECEF" BorderThickness="1"
                    Padding="15" Margin="10,0,10,10"
                    Visibility="{Binding ShowFinancialInputs, Converter={StaticResource BoolToVis}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- Service Charge Calculator Inputs -->
                    <GroupBox Grid.Row="0" Header="Service Charge Calculator"
                             Visibility="{Binding IsServiceChargeMode, Converter={StaticResource BoolToVis}}"
                             Margin="0,0,0,10">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Annual Expenses:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="0" Grid.Column="1"
                                                    Value="{Binding AnnualExpenses, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Target Reserve %:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="1" Grid.Column="1"
                                                    Value="{Binding TargetReservePercentage, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <syncfusion:ButtonAdv Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                                                Label="Calculate"
                                                Command="{Binding CalculateServiceChargeCommand}"
                                                Background="#28A745" Foreground="White"
                                                VerticalAlignment="Center" />
                        </Grid>
                    </GroupBox>

                    <!-- What-If Scenario Inputs -->
                    <GroupBox Grid.Row="1" Header="What-If Scenario Planner"
                             Visibility="{Binding IsWhatIfMode, Converter={StaticResource BoolToVis}}"
                             Margin="0,0,0,10">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Pay Raise %:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="0" Grid.Column="1"
                                                    Value="{Binding PayRaisePercentage, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Benefits Increase %:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="1" Grid.Column="1"
                                                    Value="{Binding BenefitsIncreasePercentage, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Equipment Cost:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="2" Grid.Column="1"
                                                    Value="{Binding EquipmentCost, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Reserve Allocation %:"
                                     VerticalAlignment="Center" Margin="0,0,10,5" />
                            <syncfusion:DoubleTextBox Grid.Row="3" Grid.Column="1"
                                                    Value="{Binding ReserveAllocationPercentage, Mode=TwoWay}"
                                                    Margin="0,0,10,5" />

                            <syncfusion:ButtonAdv Grid.Row="0" Grid.Column="2" Grid.RowSpan="4"
                                                Label="Generate Scenario"
                                                Command="{Binding GenerateWhatIfScenarioCommand}"
                                                Background="#17A2B8" Foreground="White"
                                                VerticalAlignment="Center" />
                        </Grid>
                    </GroupBox>

                    <!-- Proactive Advisor Inputs -->
                    <GroupBox Grid.Row="2" Header="Proactive Advisor"
                             Visibility="{Binding IsProactiveMode, Converter={StaticResource BoolToVis}}"
                             Margin="0,0,0,10">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0"
                                     Text="Get proactive recommendations and insights based on your current data."
                                     TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,0,10,0" />

                            <syncfusion:ButtonAdv Grid.Row="0" Grid.Column="1"
                                                Label="Get Advice"
                                                Command="{Binding GetProactiveAdviceCommand}"
                                                Background="#6F42C1" Foreground="White"
                                                VerticalAlignment="Center" />
                        </Grid>
                    </GroupBox>
                </Grid>
            </Border>

            <!-- Input Area -->
            <Border Grid.Row="2" Background="#F5F5F5" BorderBrush="#DDDDDD" BorderThickness="1,1,1,0"
                    Padding="10" Margin="10,0,10,10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <syncfusion:SfTextBoxExt Grid.Column="0"
                                           Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}"
                                           VerticalAlignment="Center"
                                           Margin="0,0,10,0"
                                           KeyDown="OnMessageInputKeyDown" />

                    <syncfusion:ButtonAdv Grid.Column="1"
                                        Label="Send"
                                        Command="{Binding SendMessageCommand}"
                                        Background="#1976D2"
                                        Foreground="White" />
                </Grid>
            </Border>
        </Grid>

        <!-- Hidden sentinel control to support UI verification helpers that look for System.Windows.Controls.Control instances -->
        <Button x:Name="UiVerificationSentinel"
                Visibility="Collapsed"
                IsHitTestVisible="False"
                Focusable="False" />
    </DockPanel>
</Window>