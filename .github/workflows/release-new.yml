name: Release

on:
    push:
                  - name: Trunk Security Scan (Release)
              uses: trunk-io/trunk-action@v1
              with:
                  arguments: --ci --upload --series=release-${{ github.run_number }} --scope=security
              env:
                  TRUNK_TOKEN: ${{ secrets.TRUNK_API_TOKEN }}: ["v*"]
    workflow_dispatch:
        inputs:
            tag_name:
                description: 'Tag name for release'
                required: true
                type: string

permissions:
    contents: write
    actions: read
    security-events: write

jobs:
    release:
        runs-on: windows-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Cache NuGet
              uses: actions/cache@v4
              with:
                  path: ~/.nuget/packages
                  key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
                  restore-keys: |
                      nuget-${{ runner.os }}-

            - name: Trunk Security Scan (Release)
              uses: trunk-io/trunk-action@v1
              with:
                  arguments: --ci --upload --series=release-${{ github.ref_name }} --scope=security
              env:
                  TRUNK_TOKEN: ${{ secrets.TRUNK_API_TOKEN }}

            - name: Restore Dependencies
              run: dotnet restore

            - name: Build Release
              run: dotnet build -c Release --no-restore /bl:msbuild.binlog

            - name: Run Tests (Release)
              run: |
                  # Run tests with JUnit XML output for Trunk
                  dotnet test -c Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger "junit;LogFileName=test-results.xml"

            - name: Upload Test Results to Trunk Flaky Tests
              if: always()  # Run even if tests fail
              continue-on-error: true  # Don't fail the job if upload fails
              uses: trunk-io/analytics-uploader@v1
              with:
                  junit-paths: "TestResults/*/test-results.xml"
                  org-slug: ${{ secrets.TRUNK_ORG_URL_SLUG }}
                  token: ${{ secrets.TRUNK_API_TOKEN }}

            - name: Pack Release
              run: dotnet pack -c Release --no-build -o ./artifacts

            - name: Generate Release Notes
              run: |
                  $tag = if ($env:GITHUB_REF_NAME) { $env:GITHUB_REF_NAME } else { $env:GITHUB_EVENT_INPUTS_TAG_NAME }
                  $changes = git log --oneline --pretty=format:"- %s" HEAD~1..HEAD
                  $date = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
                  $releaseNotes = "# Release $tag`n`n## Changes`n$changes`n`n## Build Information`n- Build Date: $date`n- .NET Version: 8.0.x`n- Target Framework: net8.0-windows`n`n## Quality Checks`n- ✅ Code Quality: Passed`n- ✅ Security Scan: Passed`n- ✅ Tests: Passed`n- ✅ Build: Successful"
                  $releaseNotes | Out-File -FilePath "RELEASE_NOTES.md" -Encoding UTF8

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.ref_name || inputs.tag_name }}
                  release_name: Release ${{ github.ref_name || inputs.tag_name }}
                  body_path: RELEASE_NOTES.md
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Release Assets
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./artifacts/*.nupkg
                  asset_name: WileyWidget.${{ github.ref_name || inputs.tag_name }}.nupkg
                  asset_content_type: application/zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: release-artifacts-${{ github.run_number }}
                  path: |
                      ./artifacts/
                      RELEASE_NOTES.md
                      msbuild.binlog
                  retention-days: 90
