// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WileyWidget.Data;

#nullable disable

namespace WileyWidget.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830022925_UpdateModelChanges")]
    partial class UpdateModelChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("PrimaryEnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QboAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("QboLastSync")
                        .HasColumnType("TEXT");

                    b.Property<int>("QboSyncStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SecondaryEnterpriseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InteractionType");

                    b.HasIndex("PrimaryEnterpriseId");

                    b.HasIndex("SecondaryEnterpriseId");

                    b.ToTable("BudgetInteractions", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CitizenCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthlyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("QboClassId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("QboLastSync")
                        .HasColumnType("TEXT");

                    b.Property<int>("QboSyncStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Enterprises", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.OverallBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageRatePerCitizen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCurrent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SnapshotDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("TotalCitizensServed")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalMonthlyBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMonthlyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMonthlyRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsCurrent")
                        .IsUnique()
                        .HasFilter("IsCurrent = 1");

                    b.HasIndex("SnapshotDate");

                    b.ToTable("OverallBudgets", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.HasOne("WileyWidget.Models.Enterprise", "PrimaryEnterprise")
                        .WithMany("BudgetInteractions")
                        .HasForeignKey("PrimaryEnterpriseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Enterprise", "SecondaryEnterprise")
                        .WithMany()
                        .HasForeignKey("SecondaryEnterpriseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PrimaryEnterprise");

                    b.Navigation("SecondaryEnterprise");
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Navigation("BudgetInteractions");
                });
#pragma warning restore 612, 618
        }
    }
}
