// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WileyWidget.Data;

#nullable disable

namespace WileyWidget.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830192332_AddAiEntities")]
    partial class AddAiEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("WileyWidget.Models.AiAnalysisAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long?>("DurationMs")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccessful")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("{}");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("LocalSystem");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("System");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("OperationType");

                    b.HasIndex("Timestamp");

                    b.HasIndex("UserId");

                    b.ToTable("AiAnalysisAudits", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.AiAnalysisResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AiResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AnalysisDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("AnalysisType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ApiCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("InputHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccessful")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<long>("ProcessingTimeMs")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisDate");

                    b.HasIndex("AnalysisType");

                    b.HasIndex("InputHash")
                        .IsUnique();

                    b.ToTable("AiAnalysisResults", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.AiRecommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfidenceLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(50);

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExpectedImpact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("GeneratedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("ImplementationDeadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Medium");

                    b.Property<string>("RecommendationText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Pending");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("Priority");

                    b.HasIndex("RecommendationType");

                    b.HasIndex("Status");

                    b.ToTable("AiRecommendations", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.AiResponseCache", b =>
                {
                    b.Property<string>("CacheKey")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastAccessedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CacheKey");

                    b.HasIndex("ExpiresAt");

                    b.ToTable("AiResponseCache", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<decimal>("MonthlyAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("PrimaryEnterpriseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QboAccountId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("QboAccountRef")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("QboLastSync")
                        .HasColumnType("TEXT");

                    b.Property<int>("QboSyncStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SecondaryEnterpriseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InteractionType");

                    b.HasIndex("PrimaryEnterpriseId");

                    b.HasIndex("SecondaryEnterpriseId");

                    b.ToTable("BudgetInteractions", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CitizenCount")
                        .IsConcurrencyToken()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ComputedDeficit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentRate")
                        .IsConcurrencyToken()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthlyExpenses")
                        .IsConcurrencyToken()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("QboClassId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("QboLastSync")
                        .HasColumnType("TEXT");

                    b.Property<int>("QboSyncStatus")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SuggestedRateHike")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Enterprises", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.OverallBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageRatePerCitizen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCurrent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SnapshotDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("TotalCitizensServed")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalMonthlyBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMonthlyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMonthlyRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsCurrent")
                        .IsUnique()
                        .HasFilter("IsCurrent = 1");

                    b.HasIndex("SnapshotDate");

                    b.ToTable("OverallBudgets", (string)null);
                });

            modelBuilder.Entity("WileyWidget.Models.AiAnalysisAudit", b =>
                {
                    b.HasOne("WileyWidget.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("WileyWidget.Models.AiRecommendation", b =>
                {
                    b.HasOne("WileyWidget.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("WileyWidget.Models.BudgetInteraction", b =>
                {
                    b.HasOne("WileyWidget.Models.Enterprise", "PrimaryEnterprise")
                        .WithMany("BudgetInteractions")
                        .HasForeignKey("PrimaryEnterpriseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WileyWidget.Models.Enterprise", "SecondaryEnterprise")
                        .WithMany()
                        .HasForeignKey("SecondaryEnterpriseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PrimaryEnterprise");

                    b.Navigation("SecondaryEnterprise");
                });

            modelBuilder.Entity("WileyWidget.Models.Enterprise", b =>
                {
                    b.Navigation("BudgetInteractions");
                });
#pragma warning restore 612, 618
        }
    }
}
